C51 COMPILER V9.00   USART                                                                 03/12/2016 13:37:52 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE USART
OBJECT MODULE PLACED IN usart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Recoder\usart.c LARGE BROWSE INCDIR(.\Recoder) DEBUG OBJECTEXTEND PRINT(.\u
                    -sart.lst) TABS(2) OBJECT(usart.obj)

line level    source

   1          #include "usart.h"
   2          #include "wch372.h"
   3          
   4          bit busy;
   5          unsigned char ht9032c_table = 0;
   6          unsigned char ht9302_i = 0;
   7          unsigned char ht9032_number_length = 0;
   8          unsigned char ht9032_data[50] = { 0 };
   9          
  10          /*----------------------------
  11          UART init
  12          ----------------------------*/
  13          void usart_init(void)
  14          {
  15   1      //#if (PARITYBIT == NONE_PARITY)
  16   1      //  SCON = 0x50;            //8-bit variable UART
  17   1      //#elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
  18   1      //  SCON = 0xda;            //9-bit variable UART, parity bit initial to 1
  19   1      //#elif (PARITYBIT == SPACE_PARITY)
  20   1      //  SCON = 0xd2;            //9-bit variable UART, parity bit initial to 0
  21   1      //#endif
  22   1      //
  23   1      //
  24   1      //
  25   1      //  AUXR |= 0x40;                //???1?1T??
  26   1      //  TMOD = 0x20;            //Set Timer1 as 8-bit auto reload mode
  27   1      //  TH1 = TL1 = -(FOSC / 32 / BAUD); //Set auto-reload vaule
  28   1      //  TR1 = 1;                //Timer1 start run
  29   1      //  ES = 1;                 //Enable UART interrupt
  30   1      
  31   1      #if (PARITYBIT == NONE_PARITY)
  32   1        S2CON = 0x50;           //8-bit variable UART
  33   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                S2CON = 0xda;           //9-bit variable UART, parity bit initial to 1
              #elif (PARITYBIT == SPACE_PARITY)
                S2CON = 0xd2;           //9-bit variable UART, parity bit initial to 0
              #endif
  38   1      
  39   1        BRT = -(FOSC / 32 / 12 / BAUD);  //Set auto-reload vaule of baudrate generator
  40   1        AUXR |= 0x10;            //Baudrate generator work in 1T mode
  41   1        IE2 = 0x01;             //Enable UART2 interrupt
  42   1        EA = 1;                 //Open master interrupt switch
  43   1      
  44   1        uart_printf("STC12C5A60S2\r\nUart2 Test !\r\n");
  45   1      }
  46          
  47          
  48          ///*----------------------------
  49          //UART interrupt service routine
  50          //----------------------------*/
  51          //void Uart_Isr() interrupt 4 using 1
  52          //{
  53          //  if (RI)
  54          //  {
C51 COMPILER V9.00   USART                                                                 03/12/2016 13:37:52 PAGE 2   

  55          //    RI = 0;             //Clear receive interrupt flag
  56          //    //        P0 = SBUF;          //P0 show UART data
  57          //    //        bit9 = RB8;         //P2.2 show parity bit
  58          //  }
  59          //  if (TI)
  60          //  {
  61          //    TI = 0;             //Clear transmit interrupt flag
  62          //    busy = 0;           //Clear transmit busy flag
  63          //  }
  64          //}
  65          
  66          void SendData(BYTE dat)
  67          {
  68   1        while (busy);           //Wait for the completion of the previous data is sent
  69   1        ACC = dat;              //Calculate the even parity bit P (PSW.0)
  70   1        if (P)                  //Set the parity bit according to P
  71   1        {
  72   2      #if (PARITYBIT == ODD_PARITY)
                  S2CON &= ~S2TB8;    //Set parity bit to 0
              #elif (PARITYBIT == EVEN_PARITY)
                  S2CON |= S2TB8;     //Set parity bit to 1
              #endif
  77   2        }
  78   1        else
  79   1        {
  80   2      #if (PARITYBIT == ODD_PARITY)
                  S2CON |= S2TB8;     //Set parity bit to 1
              #elif (PARITYBIT == EVEN_PARITY)
                  S2CON &= ~S2TB8;    //Set parity bit to 0
              #endif
  85   2        }
  86   1        busy = 1;
  87   1        S2BUF = ACC;            //Send data to UART2 buffer
  88   1      }
  89          
  90          /*----------------------------
  91          Send a string to UART
  92          Input: s (address of string)
  93          Output:None
  94          ----------------------------*/
  95          void SendString(char *s)
  96          {
  97   1        while (*s)              //Check the end of the string
  98   1        {
  99   2          SendData(*s++);     //Send current char and increment string ptr
 100   2        }
 101   1      }
 102          
 103          void uart_printf(const char *fmt, ...)
 104          {
 105   1        va_list ap;
 106   1        char xdata string[512];//??????RAM,?????RAM,????????RAM??(???1024)  
 107   1      
 108   1        va_start(ap, fmt);
 109   1        vsprintf(string, fmt, ap);//???????sprintf??,?????,??????,????  
 110   1        SendString(string);
 111   1        va_end(ap);
 112   1      }
 113          
 114          
 115          void Uart2() interrupt 8 using 1
 116          {
C51 COMPILER V9.00   USART                                                                 03/12/2016 13:37:52 PAGE 3   

 117   1        unsigned char temp = 0, j = 0;
 118   1      
 119   1        if (S2CON & S2RI)
 120   1        {
 121   2          S2CON &= ~S2RI;     //Clear receive interrupt flag
 122   2          //        P0 = S2BUF;         //P0 show UART data
 123   2          //        P2 = (S2CON & S2RB8);//P2.2 show parity bit
 124   2          temp = S2BUF;
 125   2          //SendData(temp);
 126   2          /******/
 127   2      
 128   2      
 129   2          if (temp == 0x80)
 130   2          {
 131   3            ht9032c_table = 1;
 132   3            return;
 133   3          }
 134   2          if (ht9032c_table == 1)
 135   2          {
 136   3            if (temp == 0x02)
 137   3            {
 138   4              ht9032c_table = 2;
 139   4            }
 140   3            return;
 141   3          }
 142   2          if (ht9032c_table == 2)
 143   2          {
 144   3            ht9032_number_length = temp;
 145   3            ht9032c_table = 3;
 146   3            return;
 147   3          }
 148   2          if (ht9032c_table == 3)
 149   2          {
 150   3            if (ht9032_number_length>0)
 151   3            {
 152   4              ht9032_data[ht9032_number_length] = temp;
 153   4      
 154   4            }
 155   3            ht9032_number_length--;
 156   3            if (ht9032_number_length == 0)
 157   3            {
 158   4              ht9032c_table = 0;
 159   4              //wch372_send2byte(0xA2,0x01,temp);
 160   4              //          ch372_wr_cmd_port(CMD_WR_USB_DATA7);//单片机向ch372写入向usb写入数据的命令//
 161   4              //          ch372_wr_dat_port(11);//告诉pc数据长度//
 162   4      
 163   4              ch372_wr_cmd_port(CMD_WR_USB_DATA5);//单片机向ch372写入向usb写入数据的命令//
 164   4              ch372_wr_dat_port(8);//告诉pc数据长度//
 165   4              ch372_wr_dat_port(0xAA);
 166   4              ch372_wr_dat_port(0X01);
 167   4              for (j = 11; j>5; j--)
 168   4              {
 169   5                ch372_wr_dat_port(ht9032_data[j]);
 170   5                //wch372_send2byte(0xA2,0x01,ht9032_data[j]);
 171   5              }//pc机验证数据的正确性//
 172   4              delay1ms();
 173   4              ch372_wr_cmd_port(CMD_WR_USB_DATA5);//单片机向ch372写入向usb写入数据的命令//
 174   4              ch372_wr_dat_port(8);//告诉pc数据长度//
 175   4              ch372_wr_dat_port(0xAA);
 176   4              ch372_wr_dat_port(0X01);
 177   4              for (j = 5; j>0; j--)
 178   4              {
C51 COMPILER V9.00   USART                                                                 03/12/2016 13:37:52 PAGE 4   

 179   5                ch372_wr_dat_port(ht9032_data[j]);
 180   5                //wch372_send2byte(0xA2,0x01,ht9032_data[j]);
 181   5              }//pc机验证数据的正确性//
 182   4              ch372_wr_dat_port(0xAA);
 183   4            }
 184   3          }
 185   2      
 186   2      
 187   2      
 188   2      
 189   2        }
 190   1        if (S2CON & S2TI)
 191   1        {
 192   2          S2CON &= ~S2TI;     //Clear transmit interrupt flag
 193   2          busy = 0;           //Clear transmit busy flag
 194   2        }
 195   1      }
 196          
 197          void delay1ms(void)   //误差 0us
 198          {
 199   1        unsigned char a, b, c;
 200   1        for (c = 1; c>0; c--)
 201   1        for (b = 38; b>0; b--)
 202   1        for (a = 214; a>0; a--);
 203   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    462    ----
   CONSTANT SIZE    =     29    ----
   XDATA SIZE       =     53     562
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
